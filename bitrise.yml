---
format_version: '5'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios


trigger_map:
- push_branch: main
  workflow: runParallelTests
- pull_request_source_branch: "*"
  workflow: runParallelTests
- tag: "*"
  workflow: release


workflows:

  clone-and-build-dependencies:
    description: Clones the repo and builds dependencies
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            ./checkout.sh
        title: ContentBlockerGen
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x


  set-project-version:
    steps:
    - set-xcode-build-number@1:
        inputs:
        - build_version_offset: '3250'
        - plist_path: Blockzilla/Info.plist
        title: Set Blockzilla version numbers
    - set-xcode-build-number@1:
        inputs:
        - build_version_offset: '3250'
        - plist_path: ContentBlocker/Info.plist
        title: Set ContentBlocker version numbers
    - set-xcode-build-number@1:
        inputs:
        - build_version_offset: '3250'
        - plist_path: FocusIntentExtension/Info.plist
        title: Set FocusIntentExtension version numbers
    - set-xcode-build-number@1:
        inputs:
        - build_version_offset: '3250'
        - plist_path: OpenInFocus/Info.plist
        title: Set OpenInFocus version numbers
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
    before_run: []


  configure-nimbus:
    steps:
    - script@1:
        title: Configure Nimbus
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :NimbusServerURL string ${NIMBUS_SERVER_URL}" Blockzilla/Info.plist
            /usr/libexec/PlistBuddy -c "Add :NimbusAppName string ${NIMBUS_APP_NAME}" Blockzilla/Info.plist
            /usr/libexec/PlistBuddy -c "Add :NimbusAppChannel string ${NIMBUS_APP_CHANNEL}" Blockzilla/Info.plist
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
    before_run: []


  configure-sentry:
    steps:
    - script@1:
        title: Configure Sentry
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :SentryDSN string ${SENTRY_DSN}" Blockzilla/Info.plist
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
    before_run: []


  upload-symbols:
    steps:
    - script@1:
        title: Upload Symbols
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            DWARF_DSYM_FOLDER_PATH=$(xcodebuild -showBuildSettings \
              | grep DWARF_DSYM_FOLDER_PATH | awk '{split($0,a," = "); print a[2]}')
            /usr/local/bin/sentry-cli --auth-token "$SENTRY_AUTH_TOKEN" upload-dif \
              --org "$SENTRY_ORG" --project "$SENTRY_PROJECT" "$DWARF_DSYM_FOLDER_PATH"
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
    before_run: []


  set-default-browser-entitlement:
    steps:
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
    before_run: []


  release:
    steps:
    - certificate-and-profile-installer@1: {}
    - xcode-archive@3:
        inputs:
        - scheme: Focus
        - team_id: 43AQ936H96
        - export_method: app-store
        title: Build Focus
    - deploy-to-itunesconnect-application-loader@1:
        inputs:
        - connection: 'off'
        - app_password: "$APPLE_ACCOUNT_PW"
        - itunescon_user: "$APPLE_ACCOUNT_ID"
    - xcode-archive@3:
        inputs:
        - scheme: Klar
        - export_method: app-store
        title: Build Klar
    - deploy-to-itunesconnect-application-loader@1:
        inputs:
        - connection: 'off'
        - app_password: "$APPLE_ACCOUNT_PW"
        - itunescon_user: "$APPLE_ACCOUNT_ID"
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.8core
    before_run:
      - clone-and-build-dependencies
      - set-project-version
      - set-default-browser-entitlement
      - configure-nimbus
      - configure-sentry
    after_run:
      - upload-symbols


  runParallelTests:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - cache-pull@2: {}
    - cache-push@2:
        inputs:
        - cache_paths: "/Users/vagrant/git"
    - build-router-start@0:
        inputs:
        - wait_for_builds: 'true'
        - access_token: "$FOCUS_PARALLEL"
        - workflows: |-
            runFocus
            runKlar
    - build-router-wait@0:
        inputs:
        - access_token: "$FOCUS_PARALLEL"
    - deploy-to-bitrise-io@1: {}
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.4core


  runFocus:
    steps:
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # Check if it is a scheduled or regular build
            # to select the testPlan to run
            
            if [[ $BITRISE_GIT_MESSAGE == Schedule* ]]
            then
                echo "Scheduled build, running Full Functional Tests"
                envman add --key TEST_PLAN_NAME --value FullFunctionalTests
            else
                echo "Regular build, running Smoke Test"
                envman add --key TEST_PLAN_NAME --value SmokeTest
            fi

        - title: Check if build is scheduled or regular to set the test plan
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            ./checkout.sh
        title: ContentBlockerGen
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    - xcode-build-for-simulator@0:
        inputs:
        - configuration: FocusDebug
        - xcodebuild_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        - scheme: Focus
    - xcode-test@2:
        inputs:
        - xcodebuild_test_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
            CODE_SIGNING_ALLOWED=NO -maximum-parallel-testing-workers 2 -testPlan $TEST_PLAN_NAME
        - scheme: Focus
    - deploy-to-bitrise-io@1: {}
    - github-status@2:
        inputs:
        - status_identifier: "Focus-build"
    - slack@3:
        run_if: ".IsBuildFailed"
        inputs:
        - channel: "#focus-ios-alerts"
        - message: "The build run the testPlan: $TEST_PLAN_NAME"
        - webhook_url: "$SLACK_WEBHOOK"
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.8core

  runKlar:
    steps:
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # Check if it is a scheduled or regular build
            # to select the testPlan to run

            if [[ $BITRISE_GIT_MESSAGE == Schedule* ]]
            then
                echo "Scheduled build, running Full Functional Tests"
                envman add --key TEST_PLAN_NAME --value FullFunctionalTests
            else
                echo "Regular build, running Smoke Test"
                envman add --key TEST_PLAN_NAME --value SmokeTest
            fi
        - title: Check if build is scheduled or regular to set the test plan
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            ./checkout.sh
        title: ContentBlockerGen
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    - xcode-build-for-simulator@0:
        inputs:
        - configuration: FocusDebug
        - xcodebuild_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        - scheme: Klar
    - xcode-test@2:
        inputs:
        - xcodebuild_test_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
            CODE_SIGNING_ALLOWED=NO -maximum-parallel-testing-workers 2 -testPlan "$TEST_PLAN_NAME"
        - scheme: Klar
    - deploy-to-bitrise-io@1: {}
    - github-status@2:
        inputs:
        - status_identifier: "Klar-build"
    - slack@3:
        run_if: ".IsBuildFailed"
        inputs:
        - channel: "#focus-ios-alerts"
        - message: "The build run the testPlan: $TEST_PLAN_NAME"
        - webhook_url: "$SLACK_WEBHOOK"
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.8core
  runFocus-iPad:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            ./checkout.sh
        title: ContentBlockerGen
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    - xcode-build-for-simulator@0:
        inputs:
        - configuration: FocusDebug
        - xcodebuild_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        - scheme: Focus
    - xcode-test@2:
        inputs:
        - xcodebuild_test_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
            CODE_SIGNING_ALLOWED=NO -maximum-parallel-testing-workers 2 -testPlan FullFunctionalTests
        - scheme: Focus
        - simulator_device: iPad Air (4th generation)
    - xcode-test@2:
        inputs:
        - xcodebuild_test_options: CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
            CODE_SIGNING_ALLOWED=NO -maximum-parallel-testing-workers 2 -testPlan SmokeTest
        - scheme: Focus
        - simulator_device: iPad Air (4th generation)
    - deploy-to-bitrise-io@1: {}
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.8core
  L10nScreenshotsTests:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@4: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    - script@1:
        inputs:
        - content: >-
            #!/usr/bin/env bash

            # fail if any commands fails

            set -e

            # debug log

            set -x

            echo "curl to Download derived data"

            curl --location --retry 5 --output l10n-screenshots-dd.zip "$MOZ_DERIVED_DATA_PATH"

            mkdir l10n-screenshots-dd

            unzip l10n-screenshots-dd.zip -d l10n-screenshots-dd

            rm l10n-screenshots-dd.zip
        title: Download derived data path
    - script@1:
        title: Generate screenshots
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x
            # workaround until 2.187 version is installed. Error with 2.186
            fastlane update_fastlane

            ./l10n-screenshots.sh --test-without-building $MOZ_LOCALES
            mkdir -p artifacts

            for locale in $(echo $MOZ_LOCALES); do
              # Only Focus for now
              zip -9 -j "$locale.zip" "l10n-screenshots/$locale/$locale/"*
              mv "$locale.zip" artifacts/
            done
    - deploy-to-bitrise-io@1.10:
        inputs:
        - deploy_path: artifacts/
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.4core
  L10nBuild:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            ./checkout.sh
        title: ContentBlockerGen
    - script@1:
        title: Set Default Web Browser Entitlement
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Focus.entitlements
            /usr/libexec/PlistBuddy -c "Add :com.apple.developer.web-browser bool true" Klar.entitlements
    - script@1:
        title: Generate screenshots
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            # workaround until 2.187 version is installed. Error with 2.186
            fastlane update_fastlane
            ./l10n-screenshots.sh en-US
    - deploy-to-bitrise-io@1.10:
        inputs:
        - deploy_path: l10n-screenshots-dd/
        - is_compress: 'true'
    - deploy-to-bitrise-io@1.10:
        inputs:
        - deploy_path: l10n-screenshots/en-US/en-US
        - is_compress: 'true'
    meta:
      bitrise.io:
        stack: osx-xcode-13.2.x
        machine_type_id: g2.4core

app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: Blockzilla.xcodeproj
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: app-store
